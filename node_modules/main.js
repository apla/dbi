var fs = require ('fs');
var dataflows = require ('dataflo.ws');

var DBInfo = require ('db-info');

var data = fs.readFileSync ('./.dbi.json');
var connections = JSON.parse (data.toString());

var connectors = {};

function listConnections (cb) {

	var connectionsList = {};

	for (var c in connections) {
		connectionsList[c] = {
			user: connections[c].user || connections[c].userName,
			database: connections[c].database || connections[c].connectString || connections[c].filename,
			host: connections[c].host || connections[c].server,
			driver: connections[c].driver
		};
	}

	cb (null, connectionsList);
}

function getDBInfo (connectionName, cb) {

	if (!connectors[connectionName]) {
		connectors[connectionName] = new DBInfo (connections[connectionName]);
	}

	var dbInfo = connectors[connectionName];

	// dbInfo.do ([], function (err, done) {});
	dbInfo.getInfo (function (err, schema) {
		cb (err, schema);
	});
}

function runQuery (connectionName, query, cb) {

	if (!connectors[connectionName]) {
		connectors[connectionName] = new DBInfo (connections[connectionName]);
	}

	var dbInfo = connectors[connectionName];

	dbInfo.do (query.split (';'), function (err, results) {
		// if (err) console.log (err);
		cb (err, results);
	});
}


// DDL statements
//ALTER - alters the structure of the database
//COMMENT - add comments to the data dictionary
//CREATE - to create objects in the database
//DROP - delete objects from the database
//FLASHBACK ... (All statements beginning with FLASHBACK)
//PURGE
//TRUNCATE - remove all records from a table, including all spaces allocated for the records are removed
//RENAME - rename an object
//UNDROP

function isDDL () {

}

module.exports.listConnections = listConnections;

module.exports.getDBInfo = getDBInfo;

module.exports.runQuery = runQuery;

module.exports.isDDL = isDDL;
